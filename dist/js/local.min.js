'use strict';

var Local = function Local() {
    // 游戏对象
    var game = void 0;
    // 时间间隔
    var INTERVAL = 200;
    // 定时器
    var timer = null;
    // 时间计数器
    var timeCount = 0;
    // 时间
    var time = 0;
    // 绑定键盘事件
    var bindKeyEvent = function bindKeyEvent() {
        document.onkeydown = function (e) {
            if (e.keyCode == 38) {
                // up
                game.rotate();
            } else if (e.keyCode == 39) {
                // right
                game.right();
            } else if (e.keyCode == 40) {
                // down
                game.down();
            } else if (e.keyCode == 37) {
                // left
                game.left();
            } else if (e.keyCode == 32) {
                // space
                game.fall();
            }
        };
    };
    // 移动
    var move = function move() {
        timeFunc();
        if (!game.down()) {
            // 当在底部的时候方块固定下来
            game.fixed();
            // 消行并计算得分
            var line = game.checkClear();
            if (line != 0) {
                game.addScore(line);
            }
            // 游戏结束
            var gameOver = game.checkGameOver();
            if (gameOver) {
                game.gameOver(false);
                stop();
            } else {
                // 下个方块的种类和旋转次数
                game.performNext(generateType(), generateDir());
            }
        };
    };

    // 随机生成干扰行
    var generataBottomLine = function generataBottomLine(lineNum) {
        var lines = [];
        for (var i = 0; i < lineNum; i++) {
            var line = [];
            for (var j = 0; j < 10; j++) {
                line.push(Math.ceil(Math.random() * 2 - 1));
            }
            lines.push(line);
        }
        return lines;
    };

    // 计时函数
    var timeFunc = function timeFunc() {
        timeCount++;
        if (timeCount == 5) {
            timeCount = 0;
            time++;
            game.setTime(time);
            if (time % 10 == 0) {
                game.addTailLines(generataBottomLine(1));
            }
        }
    };

    // 随机生成一个方块种类 0-6随机整数
    var generateType = function generateType() {
        return Math.ceil(Math.random() * 7) - 1;
    };

    // 随机生成一个旋转次数 0-3随机整数
    var generateDir = function generateDir() {
        return Math.ceil(Math.random() * 4) - 1;
    };

    // 开始方法
    var start = function start() {
        var doms = {
            gameDiv: document.getElementById('game'),
            nextDiv: document.getElementById('next'),
            timeDiv: document.getElementById('time'),
            scoreDiv: document.getElementById('score'),
            resultDiv: document.getElementById('gameover')
        };
        game = new Game();
        game.init(doms, generateType(), generateDir());
        // 绑定键盘方向事件
        bindKeyEvent();
        game.performNext(generateType(), generateDir());
        timer = setInterval(move, INTERVAL);
    };

    // 结束方法
    var stop = function stop() {
        // 关掉定时器
        if (timer) {
            clearInterval(timer);
            timer = null;
        }
        // 清楚键盘事件
        document.onkeydown = null;
    };

    // 导出
    this.start = start;
};